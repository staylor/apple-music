{"version":3,"file":null,"sources":["src/middleware/queryLogger.js","../data/catalog.js","src/flux/Store.js","src/schema.js","src/server.js"],"sourcesContent":["import bodyParser from 'body-parser';\nimport clc from 'cli-color';\n\n// create application/json parser\nconst jsonParser = bodyParser.json();\n\nexport default function queryLogger() {\n  return [\n    jsonParser,\n    (req, res, next) => {\n      const date = new Date();\n      console.log('--- ' + clc.bold.green(`${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`) + ' ---');\n      console.log(clc.bold.blackBright('query:\\n') + req.body.query);\n      console.log(clc.bold.blackBright('variables:\\n') + JSON.stringify(req.body.variables, null, 2));\n      console.log('');\n      Object.keys(req.headers).forEach(k => console.log(\n        clc.bold.blackBright(`${k}:`), req.headers[k]\n      ));\n      next();\n    }\n  ]\n}\n","export const artists = [\n  {\n    \"name\": \"Bon Iver\",\n    \"id\": \"273428126\",\n    \"artistId\": 273428126,\n    \"albums\": [ 1141107722 ]\n  },\n  {\n    \"name\": \"Frank Ocean\",\n    \"id\": \"442122051\",\n    \"artistId\": 442122051,\n    \"albums\": [ 1146195596 ]\n  },\n  {\n    \"name\": \"Goodbye Picasso\",\n    \"id\": \"12345678\",\n    \"artistId\": 12345678,\n    \"albums\": [ 123456 ]\n  }\n];\n\nexport const tracks = [\n  {\n    \"number\": 1,\n    \"id\": \"1141108073\",\n    \"trackId\": 1141108073,\n    \"name\": \"22 (OVER S∞∞N)\",\n    \"length\": \"2:48\",\n    \"src\": \"22-a-million/01.mp3\"\n  },\n  {\n    \"number\": 2,\n    \"id\": \"1141108076\",\n    \"trackId\": 1141108076,\n    \"name\": \"10 d E A T h b R E a s T ⚄ ⚄\",\n    \"length\": \"2:24\",\n    \"src\": \"22-a-million/02.mp3\"\n  },\n  {\n    \"number\": 3,\n    \"id\": \"1141108077\",\n    \"trackId\": 1141108077,\n    \"name\": \"715 - CRΣΣKS\",\n    \"length\": \"2:12\",\n    \"src\": \"22-a-million/03.mp3\"\n  },\n  {\n    \"number\": 4,\n    \"id\": \"1141108078\",\n    \"trackId\": 1141108078,\n    \"name\": \"33 “GOD”\",\n    \"length\": \"3:33\",\n    \"src\": \"22-a-million/04.m4a\"\n  },\n  {\n    \"number\": 5,\n    \"id\": \"1141108079\",\n    \"trackId\": 1141108079,\n    \"name\": \"29 #Strafford APTS\",\n    \"length\": \"4:05\",\n    \"src\": \"22-a-million/05.mp3\"\n  },\n  {\n    \"number\": 6,\n    \"id\": \"1141108080\",\n    \"trackId\": 1141108080,\n    \"name\": \"666 ʇ\",\n    \"length\": \"4:12\",\n    \"src\": \"22-a-million/06.mp3\"\n  },\n  {\n    \"number\": 7,\n    \"id\": \"1141108081\",\n    \"trackId\": 1141108081,\n    \"name\": \"21 M♢♢N WATER\",\n    \"length\": \"3:08\",\n    \"src\": \"22-a-million/07.mp3\"\n  },\n  {\n    \"number\": 8,\n    \"id\": \"1141108082\",\n    \"trackId\": 1141108082,\n    \"name\": \"8 (circle)\",\n    \"length\": \"5:09\",\n    \"src\": \"22-a-million/08.mp3\"\n  },\n  {\n    \"number\": 9,\n    \"id\": \"1141108083\",\n    \"trackId\": 1141108083,\n    \"name\": \"____45_____\",\n    \"length\": \"2:46\",\n    \"src\": \"22-a-million/09.mp3\"\n  },\n  {\n    \"number\": 10,\n    \"id\": \"1141108088\",\n    \"trackId\": 1141108088,\n    \"name\": \"00000 Million\",\n    \"length\": \"3:53\",\n    \"src\": \"22-a-million/10.mp3\"\n  },\n  {\n    \"number\": 1,\n    \"id\": \"11\",\n    \"trackId\": 11,\n    \"name\": \"City Blues\",\n    \"length\": \"3:09\",\n    \"src\": \"mixes/1.mp3\"\n  },\n  {\n    \"number\": 2,\n    \"id\": \"12\",\n    \"trackId\": 12,\n    \"name\": \"Old Ohio\",\n    \"length\": \"3:52\",\n    \"src\": \"mixes/2.mp3\"\n  },\n  {\n    \"number\": 3,\n    \"id\": \"13\",\n    \"trackId\": 13,\n    \"name\": \"A Drunkard's Testimonial\",\n    \"length\": \"3:43\",\n    \"src\": \"mixes/3.mp3\"\n  },\n  {\n    \"number\": 4,\n    \"id\": \"14\",\n    \"trackId\": 14,\n    \"name\": \"Flesh and Bone\",\n    \"length\": \"4:43\",\n    \"src\": \"mixes/4.mp3\"\n  },\n  {\n    \"number\": 5,\n    \"id\": \"15\",\n    \"trackId\": 15,\n    \"name\": \"Wasted Love\",\n    \"length\": \"5:27\",\n    \"src\": \"mixes/5.mp3\"\n  },\n  {\n    \"number\": 6,\n    \"id\": \"16\",\n    \"trackId\": 16,\n    \"name\": \"Winter Blues\",\n    \"length\": \"7:12\",\n    \"src\": \"mixes/6.mp3\"\n  },\n  {\n    \"number\": 7,\n    \"id\": \"17\",\n    \"trackId\": 17,\n    \"name\": \"Georgia\",\n    \"length\": \"5:16\",\n    \"src\": \"mixes/7.mp3\"\n  },\n  {\n    \"number\": 1,\n    \"id\": \"1146195712\",\n    \"trackId\": 1146195712,\n    \"name\": \"Nikes\",\n    \"length\": \"5:14\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 2,\n    \"id\": \"1146195713\",\n    \"trackId\": 1146195713,\n    \"name\": \"Ivy\",\n    \"length\": \"4:09\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 3,\n    \"id\": \"1146195714\",\n    \"trackId\": 1146195714,\n    \"name\": \"Pink + White\",\n    \"length\": \"3:04\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 4,\n    \"id\": \"1146195715\",\n    \"trackId\": 1146195715,\n    \"name\": \"Be Yourself\",\n    \"length\": \"1:26\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 5,\n    \"id\": \"1146195716\",\n    \"trackId\": 1146195716,\n    \"name\": \"Solo\",\n    \"length\": \"4:17\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 6,\n    \"id\": \"1146195717\",\n    \"trackId\": 1146195717,\n    \"name\": \"Skyline To\",\n    \"length\": \"3:04\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 7,\n    \"id\": \"1146195718\",\n    \"trackId\": 1146195718,\n    \"name\": \"Self Control\",\n    \"length\": \"4:09\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 8,\n    \"id\": \"1146195719\",\n    \"trackId\": 1146195719,\n    \"name\": \"Good Guy\",\n    \"length\": \"1:06\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 9,\n    \"id\": \"1146195720\",\n    \"trackId\": 1146195720,\n    \"name\": \"Nights\",\n    \"length\": \"5:07\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 10,\n    \"id\": \"1146195721\",\n    \"trackId\": 1146195721,\n    \"name\": \"Solo (Reprise)\",\n    \"length\": \"1:18\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 11,\n    \"id\": \"1146195722\",\n    \"trackId\": 1146195722,\n    \"name\": \"Pretty Sweet\",\n    \"length\": \"2:37\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 12,\n    \"id\": \"1146195723\",\n    \"trackId\": 1146195723,\n    \"name\": \"Facebook Story\",\n    \"length\": \"1:08\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 13,\n    \"id\": \"1146195724\",\n    \"trackId\": 1146195724,\n    \"name\": \"Close to You\",\n    \"length\": \"1:25\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 14,\n    \"id\": \"1146195725\",\n    \"trackId\": 1146195725,\n    \"name\": \"White Ferrari\",\n    \"length\": \"4:08\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 15,\n    \"id\": \"1146195726\",\n    \"trackId\": 1146195726,\n    \"name\": \"Seigfried\",\n    \"length\": \"5:34\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 16,\n    \"id\": \"1146195727\",\n    \"trackId\": 1146195727,\n    \"name\": \"Godspeed\",\n    \"length\": \"2:57\",\n    \"src\": \"\"\n  },\n  {\n    \"number\": 17,\n    \"id\": \"1146195728\",\n    \"trackId\": 1146195728,\n    \"name\": \"Futura Free\",\n    \"length\": \"9:24\",\n    \"src\": \"\"\n  }\n];\n\nexport const albums = [\n{\n  \"id\": \"1141107722\",\n  \"albumId\": 1141107722,\n  \"name\": \"22, A Million\",\n  \"artist\": \"273428126\",\n  \"genre\": \"Alternative\",\n  \"year\": 2016,\n  \"length\": \"35 minutes\",\n  \"image\": \"22-a-million.jpg\",\n  \"discs\": [\n    {\n      \"tracks\": [\n        1141108073,\n        1141108076,\n        1141108077,\n        1141108078,\n        1141108079,\n        1141108080,\n        1141108081,\n        1141108082,\n        1141108083,\n        1141108088,\n      ]\n    }\n  ]\n}, {\n  \"id\": \"123456\",\n  \"albumId\": 123456,\n  \"name\": \"Mixes\",\n  \"artist\": \"12345678\",\n  \"genre\": \"Pop\",\n  \"year\": 2016,\n  \"length\": \"34 minutes\",\n  \"image\": \"default.png\",\n  \"discs\": [\n    {\n      \"tracks\": [\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17\n      ]\n    }\n  ]\n}, {\n  \"id\": \"1146195596\",\n  \"albumId\": 1146195596,\n  \"name\": \"Blonde\",\n  \"artist\": \"442122051\",\n  \"genre\": \"Pop\",\n  \"year\": 2016,\n  \"length\": \"1 hour, 1 minute\",\n  \"image\": \"blonde.jpg\",\n  \"discs\": [\n    {\n      \"tracks\": [\n        1146195712,\n        1146195713,\n        1146195714,\n        1146195715,\n        1146195716,\n        1146195717,\n        1146195718,\n        1146195719,\n        1146195720,\n        1146195721,\n        1146195722,\n        1146195723,\n        1146195724,\n        1146195725,\n        1146195726,\n        1146195727,\n        1146195728,\n      ]\n    }\n  ]\n}];\n\n\nexport default { albums, artists, tracks };\n","import cookie from 'react-cookie';\nimport { EventEmitter } from 'fbemitter';\nimport catalog from '../../../data/catalog';\n\nconst langs = {};\nlet data = {\n  locale: 'en',\n  track: cookie.load('track'),\n  album: cookie.load('album'),\n  currentTime: null,\n  catalog,\n};\nlet audio;\nconst albumsById = {};\nconst artistsById = {};\nconst tracksById = {};\n\nconst emitter = new EventEmitter();\n\nconst Store = {\n  AUDIO_PATH: '/audio/',\n\n  setAudio() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    audio = document.createElement('audio');\n    if (data.track) {\n      const track = this.trackById(data.track);\n      audio.src = `${this.AUDIO_PATH}${track.src}`;\n    }\n\n    audio.ontimeupdate = (event) => {\n      Store.set('currentTime', event.timeStamp);\n    };\n  },\n\n  getAudio() {\n    if (audio) {\n      return audio;\n    }\n\n    this.setAudio();\n\n    return audio;\n  },\n\n  getData() {\n    return data;\n  },\n\n  set(key, value) {\n    data[key] = value;\n    emitter.emit(`change:${key}`);\n    emitter.emit('change');\n  },\n\n  setData(newData) {\n    data = newData;\n    emitter.emit('change');\n  },\n\n  addListener(eventType, fn) {\n    return emitter.addListener(eventType, fn);\n  },\n\n  change() {\n    emitter.emit('change');\n  },\n\n  getLocale() {\n    return data.locale;\n  },\n\n  getMessages() {\n    const locale = this.getLocale();\n\n    if (langs[locale]) {\n      return langs[locale];\n    }\n\n    langs[locale] = require(`../langs/${locale}.js`).default;\n\n    return langs[locale];\n  },\n\n  albumById(albumId) {\n    albumId = parseInt(albumId, 10);\n    if (albumsById[albumId]) {\n      return albumsById[albumId];\n    }\n\n    if (!data.catalog) {\n      return null;\n    }\n\n    const album = data.catalog.albums.find(currentAlbum => currentAlbum.albumId === albumId);\n    albumsById[albumId] = album;\n    return album;\n  },\n\n  artistById(artistId) {\n    artistId = parseInt(artistId, 10);\n    if (artistsById[artistId]) {\n      return artistsById[artistId];\n    }\n\n    if (!data.catalog) {\n      return null;\n    }\n\n    const artist = data.catalog.artists.find(currentArtist => currentArtist.artistId === artistId);\n    artistsById[artistId] = artist;\n    return artist;\n  },\n\n  trackById(trackId) {\n    trackId = parseInt(trackId, 10);\n    if (tracksById[trackId]) {\n      return tracksById[trackId];\n    }\n\n    if (!data.catalog) {\n      return null;\n    }\n\n    const artist = data.catalog.tracks.find(track => track.trackId === trackId);\n    tracksById[trackId] = artist;\n    return artist;\n  },\n\n  getCurrentAlbum() {\n    const albumId = cookie.load('album');\n    if (albumId) {\n      return this.albumById(albumId);\n    }\n    return null;\n  },\n\n  getCurrentTrack() {\n    const trackId = cookie.load('track');\n    if (trackId) {\n      return this.trackById(trackId);\n    }\n    return null;\n  },\n\n  getAlbums() {\n    return data.catalog.albums;\n  },\n\n  getArtists() {\n    return data.catalog.artists;\n  },\n\n  getTracks() {\n    return data.catalog.tracks;\n  },\n};\n\nexport default Store;\n","import {\n  GraphQLInt,\n  GraphQLList,\n  GraphQLObjectType,\n  GraphQLSchema,\n  GraphQLString,\n} from 'graphql';\n\nimport {\n  globalIdField,\n  fromGlobalId,\n  nodeDefinitions,\n  connectionDefinitions,\n  connectionArgs,\n  connectionFromArray,\n} from 'graphql-relay';\n\nimport Store from './flux/Store';\n\n/* eslint-disable no-use-before-define */\n\nconst store = Store.getData();\n\nconst { nodeInterface, nodeField } = nodeDefinitions(\n  (globalId) => {\n    const { type, id } = fromGlobalId(globalId);\n    if (type === 'Album') {\n      return Store.albumById(id);\n    } else if (type === 'Artist') {\n      return Store.artistById(id);\n    } else if (type === 'Track') {\n      return Store.trackById(id);\n    }\n    return null;\n  },\n\n  (obj) => {\n    if (obj instanceof AlbumType) {\n      return AlbumType;\n    } else if (obj instanceof ArtistType) {\n      return ArtistType;\n    } else if (obj instanceof TrackType) {\n      return TrackType;\n    }\n    return null;\n  }\n);\n\nconst TrackType = new GraphQLObjectType({\n  name: 'Track',\n  fields: () => ({\n    id: globalIdField('Track'),\n    trackId: {\n      type: GraphQLInt,\n      description: 'The id of the track.',\n    },\n    number: {\n      type: GraphQLInt,\n      description: 'The play index of the track.',\n    },\n    name: {\n      type: GraphQLString,\n      description: 'The name of the track.',\n    },\n    length: {\n      type: GraphQLString,\n      description: 'The formatted length of the track.',\n    },\n    src: {\n      type: GraphQLString,\n      description: 'The relative path to the source audio for the track.',\n    },\n  }),\n  interfaces: [nodeInterface],\n});\n\nconst DiscType = new GraphQLObjectType({\n  name: 'Disc',\n  fields: () => ({\n    number: { type: GraphQLInt },\n    tracks: {\n      type: TrackConnection,\n      description: 'A list of tracks.',\n      args: connectionArgs,\n      resolve: (disc, args) => connectionFromArray(\n        disc.tracks.map(id => Store.trackById(id)),\n        args\n      ),\n    },\n  }),\n});\n\nconst ArtistType = new GraphQLObjectType({\n  name: 'Artist',\n  description: 'An artist in the catalog',\n  fields: () => ({\n    id: globalIdField('Artist'),\n    artistId: {\n      type: GraphQLInt,\n      description: 'The id of the artist.',\n    },\n    name: {\n      type: GraphQLString,\n      description: 'The name of the artist.',\n    },\n    albums: {\n      type: AlbumConnection,\n      description: 'Albums by the artist.',\n      args: connectionArgs,\n      resolve: (artist, args) => connectionFromArray(\n        artist.albums.map(id => Store.albumById(id)),\n        args\n      ),\n    },\n  }),\n  interfaces: [nodeInterface],\n});\n\nconst AlbumType = new GraphQLObjectType({\n  name: 'Album',\n  description: 'An album in the catalog',\n  fields: () => ({\n    id: globalIdField('Album'),\n    albumId: {\n      type: GraphQLInt,\n      description: 'The id of the album.',\n    },\n    name: {\n      type: GraphQLString,\n      description: 'The name of the album.',\n    },\n    artist: {\n      type: ArtistConnection,\n      description: 'The name of the artist who created the album.',\n      args: connectionArgs,\n      resolve: (album, args) => connectionFromArray(\n        [Store.artistById(album.artist)],\n        args\n      ),\n    },\n    genre: {\n      type: GraphQLString,\n      description: 'The genre of the album.',\n    },\n    year: {\n      type: GraphQLInt,\n      description: 'The year the album was released.',\n    },\n    length: {\n      type: GraphQLString,\n      description: 'The formatted length of the album.',\n    },\n    image: {\n      type: GraphQLString,\n      description: 'The relative path of the cover image source.',\n    },\n    discs: {\n      type: new GraphQLList(DiscType),\n      description: 'Discs containing tracks. Most albums contain only one disc.',\n    },\n  }),\n  interfaces: [nodeInterface],\n});\n\nconst {\n  // eslint-disable-next-line no-unused-vars\n  edgeType: ArtistEdge,\n  connectionType: ArtistConnection,\n} = connectionDefinitions({ nodeType: ArtistType });\n\nconst {\n  // eslint-disable-next-line no-unused-vars\n  edgeType: AlbumEdge,\n  connectionType: AlbumConnection,\n} = connectionDefinitions({ nodeType: AlbumType });\n\nconst {\n  // eslint-disable-next-line no-unused-vars\n  edgeType: TrackEdge,\n  connectionType: TrackConnection,\n} = connectionDefinitions({ nodeType: TrackType });\n\nconst CollectionType = new GraphQLObjectType({\n  name: 'Collection',\n  description: 'A list of results.',\n  fields: {\n    results: {\n      type: new GraphQLList(AlbumType),\n      description: 'Currently, a list of albums.',\n    },\n  },\n});\n\nconst Root = new GraphQLObjectType({\n  name: 'Root',\n  fields: () => ({\n    albums: {\n      type: CollectionType,\n      resolve: () => ({\n        results: store.catalog.albums,\n      }),\n    },\n    album: {\n      type: AlbumType,\n      args: {\n        id: { type: GraphQLInt },\n      },\n      resolve: (_, args) => Store.albumById(args.id),\n    },\n    artist: {\n      type: ArtistType,\n      args: {\n        id: { type: GraphQLInt },\n      },\n      resolve: (_, args) => Store.artistById(args.id),\n    },\n    track: {\n      type: TrackType,\n      args: {\n        id: { type: GraphQLInt },\n      },\n      resolve: (_, args) => Store.trackById(args.id),\n    },\n    currentAlbum: {\n      type: AlbumType,\n      resolve: () => Store.getCurrentAlbum(),\n    },\n    currentTrack: {\n      type: TrackType,\n      resolve: () => Store.getCurrentTrack(),\n    },\n    node: nodeField,\n  }),\n});\n\nconst Schema = new GraphQLSchema({\n  query: Root,\n});\n\nexport default Schema;\n","import express from 'express';\nimport graphQLHTTP from 'express-graphql';\nimport responseTime from 'response-time';\nimport queryLogger from './middleware/queryLogger';\nimport Schema from './schema';\nimport { logError } from './log';\n\n/* eslint-disable no-console */\n\nconst GRAPHQL_PORT = 8080;\nconst app = express();\n\n// uncomment this to output incoming query and request headers\napp.use(queryLogger());\n\napp.use(responseTime((req, res, time) => {\n  console.log(`Response time: ${Math.floor(time)}ms`);\n}));\n\napp.use(express.static('public'));\n\n// Expose a GraphQL endpoint using the GQL middleware\napp.use('/', graphQLHTTP(req => ({\n  graphiql: true,\n  schema: Schema,\n  rootValue: {\n    cookies: req.cookies,\n  },\n})));\n\nconst server = app.listen(process.env.PORT || GRAPHQL_PORT, () => {\n  const { address, port } = server.address();\n  console.log(`GraphQL Server is now running on http://${address}:${port}`);\n});\n"],"names":["jsonParser","bodyParser","json","queryLogger","req","res","next","date","Date","log","clc","bold","green","getHours","getMinutes","getSeconds","blackBright","body","query","JSON","stringify","variables","keys","headers","forEach","k","console","artists","tracks","albums","langs","data","cookie","load","audio","albumsById","artistsById","tracksById","emitter","EventEmitter","Store","window","document","createElement","track","trackById","src","AUDIO_PATH","ontimeupdate","event","set","timeStamp","setAudio","key","value","emit","newData","eventType","fn","addListener","locale","getLocale","require","default","albumId","parseInt","catalog","album","find","currentAlbum","artistId","artist","currentArtist","trackId","albumById","store","getData","nodeInterface","nodeField","nodeDefinitions","globalId","type","id","fromGlobalId","artistById","obj","AlbumType","ArtistType","TrackType","GraphQLObjectType","globalIdField","GraphQLInt","GraphQLString","DiscType","TrackConnection","connectionArgs","disc","args","connectionFromArray","map","AlbumConnection","ArtistConnection","GraphQLList","ArtistEdge","connectionDefinitions","nodeType","AlbumEdge","TrackEdge","CollectionType","Root","_","getCurrentAlbum","getCurrentTrack","Schema","GraphQLSchema","GRAPHQL_PORT","app","express","use","responseTime","time","Math","floor","static","graphQLHTTP","cookies","server","listen","process","env","PORT","address","port"],"mappings":"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"}